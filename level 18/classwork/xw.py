# ცვალადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# პირველი ხუთი ელემენტის ამოღება
first_five_elements = my_list[:5]

# შედეგის დაბეჭდვა
print("პირველი ხუთი ელემენტი:", first_five_elements)




# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# ბოლო სამი ელემენტის ამოღება
last_three_elements = my_list[-3:]

# შედეგის დაბეჭდვა
print("ბოლო სამი ელემენტი:", last_three_elements)




# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# თითოეული მეორე ელემენტის ამოღება
every_second_element = my_list[::2]

# შედეგის დაბეჭდვა
print("ყველა მეორე ელემენტი:", every_second_element)



# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# სუბლისტის ამოღება მესამე (ინდექსი 2) და მეშვიდე (ინდექსი 6) ელემენტების ჩათვლით
sublist = my_list[2:7]

# შედეგის დაბეჭდვა
print("მესამე (ინდექსი 2) და მეშვიდე (ინდექსი 6) ელემენტების სუბლისტი:", sublist)



# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# პირველი ნახევრის გაწვდვა
midpoint = len(my_list) // 2
first_half = my_list[:midpoint]

# შედეგის დაბეჭდვა
print("პირველი ნახევარი:", first_half)



# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# სიის შუა წერტილის (მიდპოინტის) გამოთვლა
midpoint = len(my_list) // 2

# მეორე ნახევრის გაწვდვა
second_half = my_list[midpoint:]

# შედეგის დაბეჭდვა
print("მეორე ნახევარი:", second_half)





# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# სიის პირველი და ბოლო ელემენტის გარეშე სუბლისტის გაწვდვა
sublist = my_list[1:-1]

# შედეგის დაბეჭდვა
print("პირველი და ბოლო ელემენტის გარეშე სუბლისტი:", sublist)



# ცვლადი `my_list` შეიცავს ელემენტების სიის
my_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]

# სიის მეორე ელემენტიდან მეოთხე ბოლო ელემენტამდე გაწვდვა ნაბიჯით 2
sublist = my_list[1:-1:2]

# შედეგის დაბეჭდვა
print("მეორე ელემენტიდან მეოთხე ბოლო ელემენტამდე ნაბიჯით 2:", sublist)


# სტრინგი
my_string = "Hello, World!"

# ბოლო 3 სიმბოლოს გარეშე სტრინგის გაწვდვა
new_string = my_string[:-3]

# შედეგის დაბეჭდვა
print("ბოლო 3 სიმბოლოს გარეშე:", new_string)



# სტრინგი
my_string = "Hello, World!"

# სტრინგის შემობრუნება
reversed_string = my_string[::-1]

# შედეგის დაბეჭდვა
print("შემობრუნებული სტრინგი:", reversed_string)




# სტრინგი
my_string = "Hello, World!"

# სტრინგის შემობრუნება
reversed_string = my_string[::-1]

# შემობრუნებული სტრინგის ლუწ ინდექსებზე მყოფი სიმბოლოების ამოღება
filtered_string = reversed_string[1::2]

# შედეგის დაბეჭდვა
print("შემობრუნებული სტრინგი:", reversed_string)
print("ლუწ ინდექსებზე მყოფი სიმბოლოების გარეშე:", filtered_string)




# დაწყებითი სია
my_list = [10, 20, 30, 40, 50, 60, 70, 80]

# ახალი მნიშვნელობები, რომლებიც უნდა შეცვალოს ლუწ ინდექსებზე
new_value = 'X'

# ლუწ ინდექსებზე მყოფი ელემენტების შეცვლა
for i in range(0, len(my_list), 2):
    my_list[i] = new_value

# შედეგის დაბეჭდვა
print("შეცვლილი სია:", my_list)






# დაწყებითი სია
original_list = [10, 20, 30, 40, 50, 60, 70, 80]

# სიები, რომლებსაც შეინახავთ კენტ ინდექსებზე მყოფ ელემენტებს და გაწვდილი ელემენტების ახალი სია
odd_index_elements = []
filtered_list = []

# სიაში კენტ ინდექსებზე მყოფი ელემენტების ამოღება და ახალი სიაში დამატება
for i in range(len(original_list)):
    if i % 2 != 0:  # კენტი ინდექსების შემოწმება
        odd_index_elements.append(original_list[i])
    else:  # ლუწ ინდექსების ელემენტების შენახვა
        filtered_list.append(original_list[i])

# შედეგების დაბეჭდვა
print("კენტი ინდექსებზე მყოფი ელემენტები:", odd_index_elements)
print("ლუწ ინდექსებზე მყოფი ელემენტები:", filtered_list)




# სიის შექმნა
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# სიის შინაარსის გამოხატვა
print("წინარე სია:", my_list)

# სიის გაწმენდა
my_list.clear()

# გაწვდილი სიის შინაარსის გამოხატვა
print("გაწვდილი სია:", my_list)




# დაწყებითი სია
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# სიის ასლის შექმნა სლაისინგით
copied_list = original_list[:]

# შედეგების დაბეჭდვა
print("მიმდინარე სია:", original_list)
print("კოპირებული სია:", copied_list)





# მიმდინარე სია
original_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# სიის ასლის შექმნა copy() მეთოდის გამოყენებით
copied_list = original_list.copy()

# შედეგების დაბეჭდვა
print("მიმდინარე სია:", original_list)
print("კოპირებული სია:", copied_list)




# პირველი სია
list1 = ['Alice', 'Bob', 'Charlie']

# მეორე სია
list2 = ['David', 'Eve', 'Frank']

# list1-ის გაფართოება list2-ის ელემენტებით
list1.extend(list2)

# შედეგების დაბეჭდვა
print("გაერთიანებული სია:", list1)







# შექმენით სია სახელებით
names_list = ['Alice', 'Bob', 'Charlie', 'David']

# ცვლა: ახალი მნიშვნელობა უნდა ჩატარდეს ინდექსზე 2
new_value = 'Eve'
index_to_insert = 2

# შეცვლილი სიის ელემენტის ჩასმა კონკრეტულ ინდექსზე
names_list.insert(index_to_insert, new_value)

# შედეგების დაბეჭდვა
print("ახალი სია:", names_list)

